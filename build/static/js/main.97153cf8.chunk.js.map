{"version":3,"sources":["NewItemForm/newItemForm.module.scss","FilteredItemTable/filteredItemTable.module.scss","app.module.scss","Wrapper/wrapper.module.scss","ItemTable/ItemRow/itemRow.module.scss","Header/header.module.scss","PageLoader/pageLoader.module.scss","PageError/pageError.module.scss","Overview/overview.module.scss","ItemTable/itemTable.module.scss","shared/api.ts","shared/utils.ts","Wrapper/index.tsx","Header/index.tsx","PageLoader/index.tsx","PageError/index.tsx","Overview/index.tsx","shared/CONSTANTS.ts","NewItemForm/index.tsx","ItemTable/ItemRow/Star/index.tsx","ItemTable/ItemRow/cross.svg","ItemTable/ItemRow/index.tsx","ItemTable/index.tsx","FilteredItemTable/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","fetchItems","fetch","then","res","json","calculateGross","net","calculatedTax","calculateTotalSum","items","map","item","Number","reduce","a","b","generateID","maxID","Math","max","id","Promise","resolve","formatCurrency","value","Intl","NumberFormat","style","currency","format","Wrapper","props","className","styles","thrasherPreventer","mainWrapper","children","Header","wrapper","alt","src","PageLoader","PageError","Overview","sum","average","length","calculateAverage","itemsCount","data-cy","TAX","NewItemForm","onItemAdd","useState","name","setName","setNet","numericNet","gross","taxPercent","calculateTax","inputWrapper","type","placeholder","onChange","currentTarget","min","n","validatetNet","String","totalWrapper","toFixed","buttonWrapper","onClick","reset","disabled","newItem","tax","isFavourite","add","Star","painted","width","viewBox","xmlns","d","xlinkHref","fill","stroke","strokeWidth","ItemRow","onCrossClick","onStarClick","numericTax","remove","cross","favorite","ItemTable","onItemRemove","onItemToggleFavorite","table","FilteredItemTable","isFiltered","setIsFiltered","filteredItems","filter","filterButton","f","tableWrapper","App","clientItems","setClientItems","useQuery","staleTime","POSITIVE_INFINITY","isLoading","data","itemWithID","useEffect","bodyWrapper","nameOverviewWrapper","updatedItems","changedItem","find","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.97153cf8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"newItemForm_wrapper__1qfua\",\"inputWrapper\":\"newItemForm_inputWrapper__2L_Px\",\"reset\":\"newItemForm_reset__1nYbU commonElements_normalButton__3kcZi\",\"add\":\"newItemForm_add__1sEz9 commonElements_normalButton__3kcZi\",\"totalWrapper\":\"newItemForm_totalWrapper__3lGVk\",\"buttonWrapper\":\"newItemForm_buttonWrapper__3MQ7T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"filteredItemTable_wrapper__2Dmwr\",\"filterButton\":\"filteredItemTable_filterButton__3UOWK commonElements_narrowButton__-QTwt commonElements_normalButton__3kcZi\",\"tableWrapper\":\"filteredItemTable_tableWrapper__1zdDU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyWrapper\":\"app_bodyWrapper__3rC8I\",\"nameOverviewWrapper\":\"app_nameOverviewWrapper__2R1w6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"wrapper_mainWrapper__3RBAW\",\"thrasherPreventer\":\"wrapper_thrasherPreventer__RI7n0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"remove\":\"itemRow_remove__2cddm utility_resetButton__3ZWtM\",\"favorite\":\"itemRow_favorite__8FCeK utility_resetButton__3ZWtM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"header_wrapper__2GQkS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"pageLoader_wrapper__y3mEt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"pageError_wrapper__3khJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"overview_wrapper__2yKO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"itemTable_table__33cVh\"};","import type { ItemList } from './types';\n\nexport const fetchItems = () =>\n  fetch(\n    'https://dl5mns5bwg.execute-api.eu-central-1.amazonaws.com/prod',\n  ).then(res => res.json() as Promise<ItemList>);\n\n","import type { Item, ClientItem } from './types';\nimport { CURRENCY } from './CONSTANTS';\n\nexport function calculateTax(net: number, taxPercent: number): number {\n  const tax = net * taxPercent;\n  return tax;\n}\n\nexport function calculateGross(net: number, calculatedTax: number): number {\n  return net + calculatedTax;\n}\n\nexport function calculateTotalSum(items: Item[]): number {\n  return calculateArraySum(items.map(item => Number(item.net)));\n}\n\nexport function calculateAverage(items: Item[]): number {\n  return items.length ? calculateTotalSum(items) / items.length : 0;\n}\n\nexport function calculateArraySum(arr: number[]): number {\n  return arr.reduce((a, b) => a + b, 0);\n}\n\nexport function makeClientItemList(items: Item[]): ClientItem[] {\n  const clientItems: ClientItem[] = items.map(item => ({\n    ...item,\n    isFavourite: false,\n  }));\n  return clientItems;\n}\n\n// Simulate requesting UUID from backend\nexport function generateID(items: ClientItem[]): Promise<number> {\n  const maxID = Math.max(...items.map(item => item.id));\n  return Promise.resolve(maxID + 1);\n}\n\nexport function formatCurrency(value: number): string {\n  return new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n  }).format(value);\n}\n","import type { PropsWithChildren } from 'react';\nimport styles from './wrapper.module.scss';\n\ntype Props = {};\nconst Wrapper = (props: PropsWithChildren<Props>) => {\n  return (\n    <div className={styles.thrasherPreventer}>\n      <div className={styles.mainWrapper}>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default Wrapper;\n","import styles from './header.module.scss';\n\nconst Header = () => {\n  return (\n    <div className={styles.wrapper}>\n      <img\n        alt=\"Alasco Logo\"\n        src=\"https://www.alasco.de/wp-content/uploads/2019/11/Logotype.png\"\n      />\n    </div>\n  );\n};\n\nexport default Header;\n","import styles from './pageLoader.module.scss';\n\nconst PageLoader = () => <div className={styles.wrapper}>Loading...</div>;\n\nexport default PageLoader;\n","import styles from './pageError.module.scss';\n\nconst PageError = () => (\n  <div className={styles.wrapper}>\n    Something went wrong, please refresh the page :(\n  </div>\n);\n\nexport default PageError;\n","import type { ClientItem } from '../shared/types';\nimport {\n  calculateTotalSum,\n  calculateAverage,\n  formatCurrency,\n} from '../shared/utils';\nimport styles from './overview.module.scss';\n\ntype Props = {\n  items: ClientItem[];\n};\nconst Overview = ({ items }: Props) => {\n  const sum = calculateTotalSum(items);\n  const average = calculateAverage(items);\n  const itemsCount = items.length;\n  return (\n    <div className={styles.wrapper}>\n        <h3>Overview</h3>\n        <div>\n          <div>Total Sum</div>\n          <div data-cy=\"overviewSum\">{formatCurrency(sum)}</div>\n        </div>\n\n        <div>\n          <div>Average</div>\n          <div data-cy=\"overviewAverage\">{formatCurrency(average)}</div>\n        </div>\n\n        <div>\n          <div>Total Items</div>\n          <div data-cy=\"overviewItemCount\">{itemsCount}</div>\n        </div>\n    </div>\n  );\n};\n\nexport default Overview;\n","const TAX = 0.16;\nconst CURRENCY = '€';\n\nexport { TAX, CURRENCY };\n","import { useState } from 'react';\nimport type { NewItem } from '../shared/types';\nimport styles from './newItemForm.module.scss';\nimport { TAX } from '../shared/CONSTANTS';\nimport { calculateGross, calculateTax, formatCurrency } from '../shared/utils';\n\ntype Props = {\n  onItemAdd: (item: NewItem) => void;\n};\nconst NewItemForm = ({ onItemAdd }: Props) => {\n  const [name, setName] = useState('');\n  const [net, setNet] = useState('');\n  const numericNet = net !== '' ? Number(net) : 0;\n  const gross = calculateGross(numericNet, TAX * numericNet);\n  const calculatedTax = calculateTax(numericNet, TAX);\n\n  function resetField() {\n    setName('');\n    setNet('');\n  }\n\n  function netValidator(n: number): number {\n    // Prevent net from going below zero\n    const validatedNet = n >= 0 ? n : 0;\n    return validatedNet;\n  }\n\n  function onItemAddClick() {\n    const newItem: NewItem = {\n      net,\n      name,\n      tax: String(calculatedTax),\n      isFavourite: false,\n    };\n    onItemAdd(newItem);\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.inputWrapper}>\n        <label>\n          Name *<br />\n          <input\n            id=\"name\"\n            data-cy=\"nameInput\"\n            type=\"text\"\n            value={name}\n            placeholder=\"Enter a name\"\n            onChange={({ currentTarget: { value } }) => setName(value)}\n          />\n        </label>\n        <label>\n          Net *<br />\n          <input\n            id=\"net\"\n            data-cy=\"netInput\"\n            type=\"number\"\n            min=\"0\"\n            value={net}\n            placeholder=\"Enter an amount\"\n            onChange={({ currentTarget: { value } }) => {\n              const validatetNet = netValidator(Number(value));\n              setNet(String(validatetNet));\n            }}\n          />\n        </label>\n      </div>\n\n      <div className={styles.totalWrapper}>\n        <div>\n          <div>Tax</div>\n          <div>{(TAX * 100).toFixed(2)} %</div>\n        </div>\n        <div>\n          <div>Gross</div>\n          <div>{formatCurrency(gross)}</div>\n        </div>\n      </div>\n\n      <div className={styles.buttonWrapper}>\n        <button onClick={resetField} className={styles.reset}>\n          Reset\n        </button>\n        <button\n          disabled={!net || !name}\n          data-cy=\"addItem\"\n          onClick={onItemAddClick}\n          className={styles.add}\n        >\n          Add\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NewItemForm;\n","type Props = {\n  painted: boolean;\n};\n\nconst Star = ({ painted }: Props) => {\n  return (\n    <div style={{ width: '20px' }}>\n      <svg viewBox=\"0 0 500 500\" xmlns=\"http://www.w3.org/2000/svg\">\n        <defs>\n          <g id=\"countour\">\n            <path d=\"m2.41245,184.82088l189.83844,0l58.66154,-183.72615l58.66157,183.72615l189.83841,0l-153.58225,113.54771l58.66458,183.72615l-153.58231,-113.5508l-153.58228,113.5508l58.66459,-183.72615l-153.5823,-113.54771z\" />\n          </g>\n        </defs>\n\n        <use\n          xlinkHref=\"#countour\"\n          fill={painted ? 'yellow' : 'transparent'}\n          stroke=\"black\"\n        />\n        <use\n          xlinkHref=\"#countour\"\n          fill=\"transparent\"\n          stroke=\"black\"\n          strokeWidth=\"30\"\n        />\n\n      </svg>\n    </div>\n  );\n};\n\nexport default Star;\n","export default __webpack_public_path__ + \"static/media/cross.d69dc0db.svg\";","import Star from './Star';\nimport type { ClientItem } from '../../shared/types';\nimport { calculateGross, formatCurrency } from '../../shared/utils';\nimport cross from './cross.svg';\nimport styles from './itemRow.module.scss';\n\ntype Props = {\n  item: ClientItem;\n  onCrossClick: () => void;\n  onStarClick: () => void;\n};\nconst ItemRow = ({ item, onCrossClick, onStarClick }: Props) => {\n  const { name, net, tax } = item;\n  const numericNet = Number(net);\n  const numericTax = Number(tax);\n  const gross = calculateGross(numericNet, numericTax);\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{formatCurrency(numericNet)}</td>\n      <td>{formatCurrency(numericTax)}</td>\n      <td>{formatCurrency(gross)}</td>\n      <td>\n        <button\n          data-cy={`deleteItemN${item.id}`}\n          className={styles.remove}\n          onClick={onCrossClick}\n        >\n          <img alt=\"delete item\" src={cross} />\n        </button>\n        <button\n          data-cy={`star${item.id}`}\n          className={styles.favorite}\n          onClick={onStarClick}\n        >\n          <Star painted={item.isFavourite} />\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default ItemRow;\n","import type { ClientItem } from '../shared/types';\nimport ItemRow from './ItemRow';\nimport styles from './itemTable.module.scss';\n\ntype Props = {\n  items: ClientItem[];\n  onItemRemove: (idx: number) => void;\n  onItemToggleFavorite: (idx: number) => void;\n};\nconst ItemTable = ({ items, onItemRemove, onItemToggleFavorite }: Props) => {\n  return (\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Net</th>\n          <th>Tax</th>\n          <th>Gross</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody data-cy=\"itemContainer\">\n        {items.map(item => (\n          <ItemRow\n            onCrossClick={() => onItemRemove(item.id)}\n            onStarClick={() => onItemToggleFavorite(item.id)}\n            key={item.id}\n            item={item}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ItemTable;\n","import { useState } from 'react';\nimport type { ClientItem } from '../shared/types';\nimport styles from './filteredItemTable.module.scss';\nimport ItemTable from '../ItemTable';\n\ntype Props = {\n  items: ClientItem[];\n  onItemRemove: (idx: number) => void;\n  onItemToggleFavorite: (idx: number) => void;\n};\nconst FilteredItemTable = ({\n  items,\n  onItemRemove,\n  onItemToggleFavorite,\n}: Props) => {\n  const [isFiltered, setIsFiltered] = useState(false);\n  const filteredItems = isFiltered\n    ? items.filter(item => item.isFavourite)\n    : items;\n  return (\n    <div className={styles.wrapper}>\n      <button\n        className={styles.filterButton}\n        onClick={() => setIsFiltered(f => !f)}\n        data-cy=\"filterFavorites\"\n      >\n        Show {isFiltered ? 'all' : 'favourites'}\n      </button>\n      <div className={styles.tableWrapper}>\n        <ItemTable\n          items={filteredItems}\n          onItemRemove={onItemRemove}\n          onItemToggleFavorite={onItemToggleFavorite}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FilteredItemTable;\n","import styles from './app.module.scss';\nimport { useState, useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport { fetchItems } from './shared/api';\nimport type { ClientItem, NewItem } from './shared/types';\nimport { makeClientItemList, generateID } from './shared/utils';\nimport Wrapper from './Wrapper';\nimport Header from './Header';\nimport PageLoader from './PageLoader';\nimport PageError from './PageError';\nimport Overview from './Overview';\nimport NewItemForm from './NewItemForm';\nimport FilteredItemTable from './FilteredItemTable';\n\nfunction App() {\n  const [clientItems, setClientItems] = useState<ClientItem[]>([]);\n  const { isLoading, data } = useQuery('items', fetchItems, {\n    // Prevent react-query from refetching items from backend and resetting\n    // client state, with production API this will not be necessary,\n    // we will send POST mutations directly to the backend, although\n    // depending on the requirements, we might have to store favorite items\n    // as a client state in web storage for example\n    staleTime: Number.POSITIVE_INFINITY,\n  });\n  useEffect(() => {\n    if (data && !clientItems.length) {\n      setClientItems(makeClientItemList(data.items));\n    }\n  }, [data]);\n\n  function onItemRemove(id: number) {\n    setClientItems(items => items.filter(item => item.id !== id));\n  }\n  function onItemToggleFavorite(id: number) {\n    const updatedItems = [...clientItems];\n    const changedItem = updatedItems.find(item => item.id === id)!;\n    changedItem.isFavourite = !changedItem.isFavourite;\n    setClientItems(updatedItems);\n  }\n  async function onItemAdd(item: NewItem) {\n    // Simulate requesting UUID from backend\n    const id = await generateID(clientItems);\n    const itemWithID: ClientItem = { ...item, id };\n    setClientItems(items => [itemWithID, ...items]);\n  }\n\n  if (isLoading) return <PageLoader />;\n  if (!data) return <PageError />;\n\n  return (\n    <Wrapper>\n      <Header />\n      <div className={styles.bodyWrapper}>\n        <div className={styles.nameOverviewWrapper}>\n          <NewItemForm onItemAdd={onItemAdd} />\n          <Overview items={clientItems} />\n        </div>\n        <FilteredItemTable\n          items={clientItems}\n          onItemRemove={onItemRemove}\n          onItemToggleFavorite={onItemToggleFavorite}\n        />\n      </div>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst devMode = process.env.NODE_ENV === 'development';\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}